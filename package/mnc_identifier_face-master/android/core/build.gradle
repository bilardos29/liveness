plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id("kotlin-parcelize")
}

def VERSION_CODE = getVersionCode()
def VERSION_NAME = getVersionName()

android {
    compileSdk 31

    defaultConfig {
        minSdk 21
        targetSdk 31

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.5.0'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // CameraX core library using camera2 implementation
    //noinspection GradleDependency
    implementation "androidx.camera:camera-camera2:$camerax_version"
    // CameraX Lifecycle Library
    //noinspection GradleDependency
    implementation "androidx.camera:camera-lifecycle:$camerax_version"

    //noinspection GradleDependency
    implementation "androidx.camera:camera-view:$camerax_version"

    //WindowManager
    implementation 'androidx.window:window:1.0.0'

    implementation("androidx.exifinterface:exifinterface:1.3.3")
}

//afterEvaluate {
//    publishing {
//        publications {
//            aar(MavenPublication) {
//                from components.release
//                groupId = groupId
//                artifactId = project.getName()
//                version = VERSION_NAME
//            }
//        }
//    }
//}

def getVersionCode() {
    def buildNumStr = hasProperty('BUILD_NUMBER') ? getProperty('BUILD_NUMBER') : null
    def code = (buildNumStr == null || buildNumStr.isEmpty()) ? project.ext.appVersionCode : buildNumStr.toInteger()
    System.out.println("Code = " + code)
    return code
}

def getVersionName() {
    def suffix = hasProperty('suffix') ? "-" + getProperty('suffix') : ""
    def name = project.ext.appVersionString + suffix
    System.out.println("Name = " + name)
    return name
}

